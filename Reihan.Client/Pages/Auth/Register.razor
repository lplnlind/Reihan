@page "/register"
@inject IAuthClient AuthClient
@inject NavigationManager NavigationManager

<MudPaper Class="pa-6 mx-auto mt-10 rounded-xl" Outlined MaxWidth="400px">
    <MudText Typo="Typo.h5" Class="mb-4 text-center pa-2 rounded-lg primary-background">ثبت‌نام</MudText>

    <EditForm Model="_registerModel" OnValidSubmit="RegisterUser">
        <MudTextField Label="نام کامل" @bind-Value="_registerModel.FullName" Required="true" />
        <MudTextField Label="ایمیل" @bind-Value="_registerModel.Email" Required="true" />
        <MudTextField Label="رمز عبور" @bind-Value="_registerModel.Password" Required="true" InputType="InputType.Password" />
        <MudTextField Label="تکرار رمز عبور" @bind-Value="_registerModel.ConfirmPassword" Required="true" InputType="InputType.Password" />

        <MudButton OnClick="RegisterUser" Variant="Variant.Outlined" Color="Color.Primary" Disabled="_isSubmitting" Class="mt-8 rounded-lg" FullWidth>ثبت‌نام</MudButton>
    </EditForm>

    <MudText Class="mt-4">
        حساب کاربری دارید؟
        <MudLink Href="/login">ورود</MudLink>
    </MudText>

    @if (!string.IsNullOrEmpty(_error))
    {
        <MudText Color="Color.Error">@_error</MudText>
    }
</MudPaper>

@code {
    private RegisterRequest _registerModel = new();
    private string? _error;
    private bool _isSubmitting = false;

    private async Task RegisterUser()
    {
        _error = null;
        _isSubmitting = true;

        if (_registerModel.Password != _registerModel.ConfirmPassword)
        {
            _error = "رمز عبور و تکرار آن یکسان نیستند.";
            _isSubmitting = false;
            return;
        }

        var result = await AuthClient.RegisterAsync(_registerModel);

        if (result)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            _error = "ثبت‌نام موفق نبود.";
        }

        _isSubmitting = false;
    }
}
