@page "/login"
@inject IAuthClient AuthClient
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject ILocalStorageService LocalStorage
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<MudPaper Elevation="3" Outlined Class="mx-auto mt-12 pa-6 rounded-xl" MaxWidth="400px">
    <MudText Typo="Typo.h5" Class="mb-4 text-center pa-2 rounded-lg primary-background">ورود به حساب کاربری</MudText>

    <EditForm Model="_model" OnValidSubmit="LoginUser">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <MudTextField Label="ایمیل" @bind-Value="_model.UserName" Required="true" />
        <MudTextField Label="رمز عبور" @bind-Value="_model.Password" InputType="InputType.Password" Required="true" />
        <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" Class="mt-8 rounded-lg" FullWidth="true" Variant="Variant.Outlined">ورود</MudButton>
    </EditForm>

    <MudText Class="mt-4">
        <MudLink Color="Color.Dark" Href="/forgot-password" Class="scondary-background">رمز عبور را فراموش کرده‌اید؟</MudLink>
    </MudText>

    <MudText>
        حساب کاربری ندارید؟
        <MudLink Href="/register">ثبت‌نام</MudLink>
    </MudText>
</MudPaper>

@code {
    private LoginRequest _model = new();

    private string _email = "";
    private string _password = "";

    private async Task LoginUser()
    {
        var result = await AuthClient.LoginAsync(_model);

        if (result)
        {
            Snackbar.Add("ورود موفقیت‌آمیز بود", Severity.Success);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Snackbar.Add("ورود ناموفق بود", Severity.Error);
        }
    }
}
