@inject ICartClient CartClient
@inject IProductClient ProductClient
@inject IFavoriteClient FavoriteClient
@inject AuthenticationStateProvider AuthProvider


@if (CardMode == CardMode.ListCard)
{
    <MudCard Class="rounded-xl pa-2 mb-2" Outlined="true" Elevation="2" Style="width: 100%">
        <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">

            <MudStack Row AlignItems="AlignItems.Center">
                <MudLink Href="@($"/shop/product/{Product.Id}")" Style="height: 100px; width: 100px;">
                    <MudImage Class="rounded-xl mud-height-full mud-width-full"
                              Src="@Product.ImageUrl"
                              ObjectFit="ObjectFit.Cover"
                              ObjectPosition="ObjectPosition.Center" />
                </MudLink>
                <MudCardContent>
                    <MudStack Row AlignItems="AlignItems.Center" Spacing="2">
                        <MudLink Href="@($"/shop/product/{Product.Id}")"
                                 Underline="Underline.None"
                                 Color="Color.Dark"
                                 Typo="Typo.h5">@Product.Name</MudLink>

                        @if (!Available)
                        {
                            <MudChip T="string"
                                     Size="Size.Small"
                                     Color="Color.Primary">ناموجود</MudChip>
                        }
                        <AuthorizeView>
                            <Authorized>
                                <MudToggleIconButton @bind-Toggled="IsFav"
                                                     @onclick="ToggleFavorite"
                                                     Icon="@Icons.Material.Rounded.FavoriteBorder"
                                                     ToggledIcon="@Icons.Material.Rounded.Favorite"
                                                     Color="Color.Dark"
                                                     ToggledColor="Color.Primary"
                                                     Size="Size.Small"
                                                     Class="pa-1" />
                            </Authorized>
                            <NotAuthorized>
                                <MudIconButton Href="/login"
                                               Class="pa-1"
                                               Icon="@Icons.Material.Rounded.FavoriteBorder"
                                               Color="Color.Dark"
                                               Size="Size.Small" />
                            </NotAuthorized>
                        </AuthorizeView>

                    </MudStack>
                    <MudText Typo="Typo.body2">سایز: متوسط | جنس: چرم مصنوعی</MudText>

                </MudCardContent>
            </MudStack>

            <MudCardActions>
                <MudStack AlignItems="AlignItems.End" Spacing="1">
                    <MudStack Row AlignItems="AlignItems.Center" Spacing="1">
                        @if (Product.DiscountPercentage.HasValue && Product.DiscountEndDate > DateTime.Now)
                        {
                            <MudText Inline Typo="Typo.caption" Class="text-through">@Product.Price.ToNumeric().En2Fa()</MudText>
                            <MudText Inline typo="Typo.h6" Class="scondary-background py-0 pr-2 rounded-lg">@Product.PriceAfterDiscount.ToNumeric().En2Fa()</MudText>
                            <MudText Inline Typo="Typo.caption">تومان</MudText>
                        }
                        else
                        {
                            <MudText Inline typo="Typo.h6">@Product.Price.ToNumeric().En2Fa()</MudText>
                            <MudText Inline Typo="Typo.caption">تومان</MudText>
                        }
                    </MudStack>
                    <AuthorizeView>
                        <Authorized>
                            @if (IsInCart)
                            {
                                <MudIconButton OnClick="RemoveFromCart"
                                               Icon="@Icons.Material.TwoTone.ShoppingCart"
                                               Class="rounded-lg"
                                               Variant="Variant.Outlined"
                                               Size="Size.Small"
                                               Color="Color.Primary" />
                            }
                            else
                            {
                                <MudButton OnClick="AddToCart"
                                           StartIcon="@Icons.Material.Rounded.AddShoppingCart"
                                           Class="rounded-lg"
                                           Variant="Variant.Outlined"
                                           Size="Size.Small"
                                           Disabled="!Available"
                                           Color="Color.Dark">افزودن</MudButton>
                            }
                        </Authorized>
                        <NotAuthorized>
                            <MudButton Href="/login"
                                       StartIcon="@Icons.Material.Rounded.AddShoppingCart"
                                       Class="rounded-lg"
                                       Variant="Variant.Outlined"
                                       Size="Size.Small"
                                       Disabled="!Available"
                                       Color="Color.Dark">افزودن</MudButton>
                        </NotAuthorized>
                    </AuthorizeView>
                </MudStack>
            </MudCardActions>

        </MudStack>

    </MudCard>
}
else if (CardMode == CardMode.NormalCard)
{
    <MudCard Class="rounded-xl pa-2" Outlined="true" Elevation="2">
        <div class="relative">
            <MudLink Href="@($"/shop/product/{Product.Id}")">
                <MudCardMedia Class="rounded-xl" Image="@Product.ImageUrl" Height="200" />
            </MudLink>
            @if (!Available)
            {
                <MudChip T="string"
                         Size="Size.Small"
                         Color="Color.Primary"
                         Class="ma-0 absolute"
                         Style="left:10px; bottom:5px;">ناموجود</MudChip>
            }
            @if (Product.DiscountPercentage.HasValue && Product.DiscountEndDate > DateTime.Now)
            {
                <MudChip T="string"
                         Size="Size.Small"
                         Color="Color.Error"
                         Class="ma-0 absolute"
                         Style="left:10px; top:10px;">%@Product.DiscountPercentage.ToString()!.En2Fa()</MudChip>
            }
        </div>

        <MudCardContent>
            <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
                <MudLink Href="@($"/shop/product/{Product.Id}")"
                         Underline="Underline.None"
                         Color="Color.Dark"
                         Typo="Typo.h5"
                         Class="py-0 pl-2 rounded-lg primary-background">@Product.Name</MudLink>
                <AuthorizeView>
                    <Authorized>
                        <MudToggleIconButton @bind-Toggled="IsFav"
                                             @onclick="ToggleFavorite"
                                             Icon="@Icons.Material.Rounded.FavoriteBorder"
                                             ToggledIcon="@Icons.Material.Rounded.Favorite"
                                             Color="Color.Dark"
                                             ToggledColor="Color.Primary"
                                             Size="Size.Small"
                                             Class="pa-1" />

                    </Authorized>
                    <NotAuthorized>
                        <MudIconButton Href="/login"
                                       Class="pa-1"
                                       Icon="@Icons.Material.Rounded.FavoriteBorder"
                                       Color="Color.Dark"
                                       Size="Size.Small" />
                    </NotAuthorized>
                </AuthorizeView>
            </MudStack>
            <MudText Typo="Typo.body2">سایز: متوسط | جنس: چرم مصنوعی</MudText>
        </MudCardContent>
        <MudCardActions Class="pt-0 justify-space-between">
            <AuthorizeView>
                <Authorized>
                    @if (IsInCart)
                    {
                        <MudIconButton OnClick="RemoveFromCart"
                                       Icon="@Icons.Material.TwoTone.ShoppingCart"
                                       Class="ro rounded-lg"
                                       Variant="Variant.Outlined"
                                       Size="Size.Small"
                                       Color="Color.Primary" />
                    }
                    else
                    {
                        <MudButton OnClick="AddToCart"
                                   StartIcon="@Icons.Material.Rounded.AddShoppingCart"
                                   Class="ro rounded-lg"
                                   Variant="Variant.Outlined"
                                   Size="Size.Small"
                                   Disabled="!Available"
                                   Color="Color.Dark">افزودن</MudButton>
                    }
                </Authorized>
                <NotAuthorized>
                    <MudButton Href="/login"
                               StartIcon="@Icons.Material.Rounded.AddShoppingCart"
                               Class="ro rounded-lg"
                               Variant="Variant.Outlined"
                               Size="Size.Small"
                               Disabled="!Available"
                               Color="Color.Dark">افزودن</MudButton>

                </NotAuthorized>
            </AuthorizeView>

            <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.FlexEnd" Spacing="1" Wrap="Wrap.Wrap">
                @if (Product.DiscountPercentage.HasValue && Product.DiscountEndDate > DateTime.Now)
                {
                    <MudText Inline Typo="Typo.caption" Class="text-through">@Product.Price.ToNumeric().En2Fa()</MudText>
                    <MudText Inline typo="Typo.h6" Class="scondary-background py-0 pr-2 rounded-lg">@Product.PriceAfterDiscount.ToNumeric().En2Fa()</MudText>
                    <MudText Inline Typo="Typo.caption">تومان</MudText>
                }
                else
                {
                    <MudText Inline typo="Typo.h6">@Product.Price.ToNumeric().En2Fa()</MudText>
                    <MudText Inline Typo="Typo.caption">تومان</MudText>
                }
            </MudStack>
        </MudCardActions>
    </MudCard>
}
else if (CardMode == CardMode.DetailsCard)
{
    <MudPaper Outlined="true" Class="@($"rounded-xl pa-3 pl-5 {UnAvailableCSS}")">
        <MudGrid Justify="Justify.Center" Spacing="10">
            <MudItem xs="12" md="6" Style="height:500px" Class="relative">
                @if (Product.ImageUrls.Count > 1)
                {
                    <MudCarousel TData="object" Class="mud-height-full" AutoCycle="false">
                        <BulletTemplate Context="selected">
                            <div Class="mud-button-root mud-icon-button mud-icon-button-color-inherit mud-ripple mud-ripple-icon pa-0 pb-2">
                                <span class="mud-icon-button-label">
                                    <MudIcon Size="Size.Small"
                                             Icon="@(selected? Icons.Material.Filled.Circle : Icons.Material.TwoTone.Circle)" Color="@Color.Inherit" />
                                </span>
                            </div>
                        </BulletTemplate>
                        <ChildContent>
                            @foreach (var img in Product.ImageUrls)
                            {
                                <MudCarouselItem>
                                    <MudImage Src="@img"
                                              Alt="تصویر محصول"
                                              Class="rounded-xl mud-height-full mud-width-full"
                                              ObjectFit="ObjectFit.Cover"
                                              ObjectPosition="ObjectPosition.Center" />
                                </MudCarouselItem>
                            }
                        </ChildContent>
                    </MudCarousel>
                }
                else if (Product.ImageUrls.Any())
                {
                    <MudImage Src="@Product.ImageUrl"
                              Alt="تصویر محصول"
                              Class="rounded-xl mud-height-full mud-width-full"
                              ObjectFit="ObjectFit.Cover"
                              ObjectPosition="ObjectPosition.Center" />
                }
                @if (!Available)
                {
                    <MudChip T="string"
                             Size="Size.Medium"
                             Color="Color.Primary"
                             Class="ma-0 absolute"
                             Style="left:55px; bottom:15px;">ناموجود</MudChip>
                }
                @if (Product.DiscountPercentage.HasValue && Product.DiscountEndDate > DateTime.Now)
                {
                    <MudChip T="string"
                             Size="Size.Medium"
                             Color="Color.Error"
                             Class="ma-0 absolute"
                             Style="left:55px; top:55px;">%@Product.DiscountPercentage.ToString()!.En2Fa()</MudChip>
                }
            </MudItem>

            <MudItem xs="12" md="6">

                <MudStack Justify="Justify.SpaceBetween" Style="height:100%">
                    <MudItem>
                        <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween" Class="mt-7">
                            <MudText Typo="Typo.h3" Class="mt-2 pl-4 rounded-lg primary-background">@Product.Name</MudText>
                            <MudStack Row AlignItems="AlignItems.Center" Spacing="2">
                                <MudChip Href="@($"/shop/{@Product.CategoryId}")" T="string" Size="Size.Small" Variant="Variant.Filled" Color="Color.Primary">@Product.CategoryName</MudChip>
                                <MudIconButton Icon="@Icons.Material.Rounded.Share" Size="Size.Small"></MudIconButton>
                                <AuthorizeView>
                                    <Authorized>
                                        <MudToggleIconButton @bind-Toggled="IsFav"
                                                             @onclick="ToggleFavorite"
                                                             Icon="@Icons.Material.Rounded.FavoriteBorder"
                                                             ToggledIcon="@Icons.Material.Rounded.Favorite"
                                                             Color="Color.Dark"
                                                             ToggledColor="Color.Primary"
                                                             Size="Size.Small"
                                                             Class="pa-1" />
                                    </Authorized>
                                    <NotAuthorized>
                                        <MudIconButton Href="/login" Class="pa-1" Icon="@Icons.Material.Rounded.FavoriteBorder" Color="Color.Dark" Size="Size.Small" aria-label="add to favorite" />
                                    </NotAuthorized>
                                </AuthorizeView>
                            </MudStack>
                        </MudStack>

                        <MudStack Row Spacing="0" AlignItems="AlignItems.End" Class="mt-5">
                            <MudText Typo="Typo.h3" Class="scondary-background rounded-lg">@Product.Price.ToNumeric().En2Fa()</MudText>
                            <MudText Inline="true" Typo="Typo.caption">تومان</MudText>
                        </MudStack>
                        <MudText Typo="Typo.body2" Class="mt-1">سایز: متوسط | جنس: چرم مصنوعی</MudText>
                        <MudText Typo="Typo.body1" Class="mt-1 mb-2">@((MarkupString)Product.Description)</MudText>
                    </MudItem>
                    <MudItem>
                        <MudStack Row Justify="Justify.FlexEnd" AlignItems="AlignItems.Center">
                            <MudStack Row AlignItems="AlignItems.Center">

                                @if (!IsInCart)
                                {
                                    <div style="width: 40px">
                                        <MudNumericField T="int"
                                                         @bind-Value="Quantity"
                                                         Min="1"
                                                         Max="@Product.StockQuantity"
                                                         Variant="Variant.Outlined"
                                                         Margin="Margin.Dense"
                                                         Class="ma-0 product-quantity"
                                                         Disabled="!Available"
                                                         HideSpinButtons />
                                    </div>
                                }

                                <AuthorizeView>
                                    <Authorized>
                                        @if (IsInCart)
                                        {
                                            <MudIconButton OnClick="RemoveFromCart"
                                                           Icon="@Icons.Material.TwoTone.ShoppingCart"
                                                           Class="ro rounded-lg"
                                                           Variant="Variant.Outlined"
                                                           Size="Size.Small" Color="Color.Primary" />
                                        }
                                        else
                                        {
                                            <MudButton OnClick="AddToCart"
                                                       StartIcon="@Icons.Material.Rounded.AddShoppingCart"
                                                       Class="ro rounded-lg"
                                                       Variant="Variant.Outlined"
                                                       Size="Size.Small"
                                                       Disabled="!Available"
                                                       Color="Color.Dark">افزودن</MudButton>
                                        }
                                    </Authorized>
                                    <NotAuthorized>
                                        <MudButton Href="/login"
                                                   StartIcon="@Icons.Material.Rounded.AddShoppingCart"
                                                   Class="ro rounded-lg"
                                                   Variant="Variant.Outlined"
                                                   Size="Size.Small"
                                                   Disabled="!Available"
                                                   Color="Color.Dark">افزودن</MudButton>
                                    </NotAuthorized>
                                </AuthorizeView>
                            </MudStack>
                        </MudStack>
                    </MudItem>
                </MudStack>
            </MudItem>
        </MudGrid>
    </MudPaper>
}
else if (CardMode == CardMode.SpecialSales)
{
    <MudPaper Outlined="true" Class="@($"rounded-xl pa-3 pl-5 {UnAvailableCSS} primary-shadow")">
        <MudGrid Justify="Justify.Center" Spacing="4">
            <MudItem xs="12" sm="6" Style="height:300px" Class="relative">
                @if (Product.ImageUrls.Count > 1)
                {
                    <MudCarousel TData="object" Class="mud-height-full" AutoCycle="false">
                        <BulletTemplate Context="selected">
                            <div Class="mud-button-root mud-icon-button mud-icon-button-color-inherit mud-ripple mud-ripple-icon pa-0 pb-2">
                                <span class="mud-icon-button-label">
                                    <MudIcon Size="Size.Small"
                                             Icon="@(selected? Icons.Material.Filled.Circle : Icons.Material.TwoTone.Circle)" Color="@Color.Inherit" />
                                </span>
                            </div>
                        </BulletTemplate>
                        <ChildContent>
                            @foreach (var img in Product.ImageUrls)
                            {
                                <MudCarouselItem>
                                    <MudImage Src="@img"
                                              Alt="تصویر محصول"
                                              Class="rounded-xl mud-height-full mud-width-full"
                                              ObjectFit="ObjectFit.Cover"
                                              ObjectPosition="ObjectPosition.Center" />
                                </MudCarouselItem>
                            }
                        </ChildContent>
                    </MudCarousel>
                }
                else if (Product.ImageUrls.Any())
                {
                    <MudImage Src="@Product.ImageUrl"
                              Alt="تصویر محصول"
                              Class="rounded-xl mud-height-full mud-width-full"
                              ObjectFit="ObjectFit.Cover"
                              ObjectPosition="ObjectPosition.Center" />
                }
                @if (!Available)
                {
                    <MudChip T="string"
                             Size="Size.Medium"
                             Color="Color.Primary"
                             Class="ma-0 absolute"
                             Style="left:25px; bottom:9px;">ناموجود</MudChip>
                }
                @if (Product.DiscountPercentage.HasValue && Product.DiscountEndDate > DateTime.Now)
                {
                    <MudChip T="string"
                             Size="Size.Medium"
                             Color="Color.Error"
                             Class="ma-0 absolute"
                             Style="left:25px; top:25px;">%@Product.DiscountPercentage.ToString()!.En2Fa()</MudChip>
                }
            </MudItem>

            <MudItem xs="12" sm="6">
                <MudStack Justify="Justify.SpaceBetween" Style="height:100%">
                    <MudItem>
                        <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.FlexEnd" Spacing="2">
                            <MudChip Href="@($"/shop/{@Product.CategoryId}")" T="string" Size="Size.Small"
                                     Variant="Variant.Filled" Color="Color.Primary">@Product.CategoryName</MudChip>
                            <MudIconButton Icon="@Icons.Material.Rounded.Share" Size="Size.Small"></MudIconButton>
                            <AuthorizeView>
                                <Authorized>
                                    <MudToggleIconButton @bind-Toggled="IsFav"
                                                         @onclick="ToggleFavorite"
                                                         Icon="@Icons.Material.Rounded.FavoriteBorder"
                                                         ToggledIcon="@Icons.Material.Rounded.Favorite"
                                                         Color="Color.Dark"
                                                         ToggledColor="Color.Primary"
                                                         Size="Size.Small"
                                                         Class="pa-1" />
                                </Authorized>
                                <NotAuthorized>
                                    <MudIconButton Href="/login" Class="pa-1" Icon="@Icons.Material.Rounded.FavoriteBorder" Color="Color.Dark" Size="Size.Small" aria-label="add to favorite" />
                                </NotAuthorized>
                            </AuthorizeView>
                        </MudStack>

                        <div class="mt-2">
                            <MudText Inline Typo="Typo.h5" Class=" pl-4 rounded-lg primary-background">@Product.Name</MudText>
                        </div>

                        <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.FlexStart" Spacing="1" Wrap="Wrap.Wrap" Class="mt-2">
                            @if (Product.DiscountPercentage.HasValue && Product.DiscountEndDate > DateTime.Now)
                            {
                                <MudText Inline Typo="Typo.caption" Class="text-through">@Product.Price.ToNumeric().En2Fa()</MudText>
                                <MudText Inline typo="Typo.h6" Class="scondary-background py-0 pr-2 rounded-lg">@Product.PriceAfterDiscount.ToNumeric().En2Fa()</MudText>
                                <MudText Inline Typo="Typo.caption">تومان</MudText>
                            }
                            else
                            {
                                <MudText Inline typo="Typo.h6">@Product.Price.ToNumeric().En2Fa()</MudText>
                                <MudText Inline Typo="Typo.caption">تومان</MudText>
                            }
                        </MudStack>

                        <MudText Typo="Typo.body2" Class="mt-1">سایز: متوسط | جنس: چرم مصنوعی</MudText>
                        <MudText Typo="Typo.body2" Class="mt-2 mb-2 line-clamp-3">@((MarkupString)Product.Description)</MudText>

                    </MudItem>
                    <MudItem>
                        <MudStack Row Justify="Justify.FlexEnd" AlignItems="AlignItems.Center">
                            <MudStack Row AlignItems="AlignItems.Center">
                                @if (!IsInCart)
                                {
                                    <div style="width: 40px">
                                        <MudNumericField T="int"
                                                         @bind-Value="Quantity"
                                                         Min="1"
                                                         Max="@Product.StockQuantity"
                                                         Variant="Variant.Outlined"
                                                         Margin="Margin.Dense"
                                                         Class="ma-0 product-quantity"
                                                         Disabled="!Available"
                                                         HideSpinButtons />
                                    </div>
                                }

                                <AuthorizeView>
                                    <Authorized>
                                        @if (IsInCart)
                                        {
                                            <MudIconButton OnClick="RemoveFromCart"
                                                           Icon="@Icons.Material.TwoTone.ShoppingCart"
                                                           Class="ro rounded-lg"
                                                           Variant="Variant.Outlined"
                                                           Size="Size.Small" Color="Color.Primary" />
                                        }
                                        else
                                        {
                                            <MudButton OnClick="AddToCart"
                                                       StartIcon="@Icons.Material.Rounded.AddShoppingCart"
                                                       Class="ro rounded-lg"
                                                       Variant="Variant.Outlined"
                                                       Size="Size.Small"
                                                       Disabled="!Available"
                                                       Color="Color.Dark">افزودن</MudButton>
                                        }
                                    </Authorized>
                                    <NotAuthorized>
                                        <MudButton Href="/login"
                                                   StartIcon="@Icons.Material.Rounded.AddShoppingCart"
                                                   Class="ro rounded-lg"
                                                   Variant="Variant.Outlined"
                                                   Size="Size.Small"
                                                   Disabled="!Available"
                                                   Color="Color.Dark">افزودن</MudButton>
                                    </NotAuthorized>
                                </AuthorizeView>
                            </MudStack>
                        </MudStack>
                    </MudItem>
                </MudStack>
            </MudItem>
        </MudGrid>
    </MudPaper>
}


@code {
    [Parameter] public ProductDto Product { get; set; } = new();
    [Parameter] public CardMode CardMode { get; set; } = CardMode.NormalCard;
    private bool IsFav;
    private bool IsInCart;
    private bool Available;
    private string UnAvailableCSS = string.Empty;
    private int Quantity = 1;


    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            IsFav = await FavoriteClient.IsFavoriteAsync(Product.Id);
            IsInCart = await ProductClient.IsInCartAsync(Product.Id);
        }

        Available = Product.StockQuantity > 0;
        if (!Available)
            UnAvailableCSS = "gray-background";
        StateHasChanged();
    }

    private async Task ToggleFavorite()
    {
        if (IsFav)
            await FavoriteClient.RemoveFromFavoriteAsync(Product.Id);
        else
            await FavoriteClient.AddToFavoriteAsync(Product.Id);

        IsFav = !IsFav;
    }


    private async Task AddToCart()
    {
        if (Product is null) return;

        var addToCart = new AddToCartRequest
        {
            ProductId = Product.Id,
            ProductName = Product.Name,
            ProductImage = Product.ImageUrl,
            Quantity = this.Quantity,
            UnitPrice = Product.Price
        };

        await CartClient.AddItemAsync(addToCart);

        IsInCart = true;
    }

    private async Task RemoveFromCart()
    {
        if (Product is null) return;

        await CartClient.RemoveItemAsync(Product.Id);

        IsInCart = false;
    }
}
