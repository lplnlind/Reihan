@using Pages.Shop
@using System.Security.Claims
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager NavigationManager
@inject IAuthClient AuthClient
@inject IDialogService DialogService

<MudAppBar Elevation="0">
    <MudIconButton Icon="@Icons.Material.Rounded.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
    <MudText>فروشگاه من</MudText>
    <MudSpacer />
    <AuthorizeView>
        <Authorized>
            <MudIconButton Icon="@Icons.Material.TwoTone.AccountCircle" Color="Color.Primary" Href="/account/profile" />
            <MudIconButton Icon="@Icons.Material.Rounded.Logout" Color="Color.Dark" OnClick="Logout" />
            <MudIconButton Icon="@Icons.Material.TwoTone.ShoppingCart" Color="Color.Dark" OnClick="OpenCartDialog" />
        </Authorized>
        <NotAuthorized>
            <MudIconButton Icon="@Icons.Material.Rounded.Login" Color="Color.Dark" Href="/login"></MudIconButton>
        </NotAuthorized>
    </AuthorizeView>
</MudAppBar>

<MudDrawer @bind-Open="@_drawerOpen" Variant="@DrawerVariant.Mini" OpenMiniOnHover="true" Elevation="0">
    <MudDrawerHeader>
        <MudText Typo="Typo.h6">ر</MudText>
    </MudDrawerHeader>

    <MudNavMenu Color="Color.Primary" Rounded="true">
        <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.TwoTone.Home">صفحه اصلی</MudNavLink>
        <MudNavLink Href="/shop" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.TwoTone.Backpack">محصولات</MudNavLink>
        <AuthorizeView Roles="Admin">
            <Authorized>
                <MudDivider></MudDivider>
                <MudNavLink Href="/admin/dashboard" Icon="@Icons.Material.TwoTone.Dashboard" Match="NavLinkMatch.All">داشبورد</MudNavLink>
                <MudNavLink Href="/admin/products" Icon="@Icons.Material.TwoTone.Backpack" Match="NavLinkMatch.Prefix">مدیریت محصولات</MudNavLink>
                <MudNavLink Href="/admin/categories" Icon="@Icons.Material.TwoTone.Category" Match="NavLinkMatch.Prefix">مدیریت دسته‌بندی‌ها</MudNavLink>
                <MudNavLink Href="/admin/users" Icon="@Icons.Material.TwoTone.SupervisedUserCircle" Match="NavLinkMatch.Prefix">مدیریت کاربران</MudNavLink>
                <MudNavLink Href="/admin/orders" Icon="@Icons.Material.TwoTone.ShoppingCart" Match="NavLinkMatch.Prefix">مدیریت سفارش‌ها</MudNavLink>
                <MudNavLink Href="/admin/setting" Icon="@Icons.Material.TwoTone.Settings" Match="NavLinkMatch.All">تنظیمات</MudNavLink>
            </Authorized>
        </AuthorizeView>
        <AuthorizeView Roles="Customer">
            <Authorized>
                <MudNavLink Href="/cart" Match="NavLinkMatch.All">سبد خرید</MudNavLink>
            </Authorized>
        </AuthorizeView>
    </MudNavMenu>
</MudDrawer>


@code {
    bool _drawerOpen = false;

    public void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private bool IsAuthenticated = false;
    private string userId = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            IsAuthenticated = true;
            userId = user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier || c.Type == "sub")?.Value ?? "کاربر";
        }
    }

    private async Task Logout()
    {
        await AuthClient.LogoutAsync();
        NavigationManager.NavigateTo("/login", true);
    }

    private async Task OpenCartDialog()
    {
        var options = new DialogOptions
        {
            CloseOnEscapeKey = true,
            MaxWidth = MaxWidth.Small,
            CloseButton = true,
            FullWidth = true,
            BackdropClick = true,
            Position = DialogPosition.TopRight,
        };

        var dialog = await DialogService.ShowAsync<CartDialog>("سبد خرید", options);
    }
}